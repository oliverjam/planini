# import Recipe, Ingredient, User from "./generated/prisma.graphql"

input PriceInput {
  value: Int!
  unit: String!
}

input IngredientInput {
  name: String!
  price: PriceInput
}

input IngredientEntryInput {
  name: String!
  quantity: Int!
}

type Query {
  me: User
  allRecipes: [Recipe!]!
  recipe(id: ID!): Recipe
  allIngredients: [Ingredient!]!
  ingredient(name: String!): Ingredient
}

type Mutation {
  signup(email: String!, password: String!): AuthPayload!
  login(email: String!, password: String!): AuthPayload!
  createIngredient(ingredient: IngredientInput!): Ingredient
  createRecipe(
    name: String!
    cuisine: String
    instructions: [String!]!
    ingredients: [IngredientEntryInput!]!
    price: Int
  ): Recipe
  deleteRecipe(id: ID!): Recipe
}

type AuthPayload {
  token: String!
  user: User!
}

# The `User` type is a reduced version ("mask") of the `User` type from the data model (and database schema).
# It does not expose the `createdAt`, `updatedAt` and `password` fields.
type User {
  id: ID!
  email: String!
}
